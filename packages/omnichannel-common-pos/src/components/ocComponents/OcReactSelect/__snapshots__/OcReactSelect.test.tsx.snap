// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OcReactSelect succeeds at shallow mount with min props 1`] = `
<div
  className="oc-react-select-container"
>
  <OcInputContainer
    addonRight=""
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
    label=""
    labelKey="labelKey"
    name="name"
    onChange={[MockFunction]}
    options={Array []}
    required={false}
    valueKey="valueKey"
  >
    <Select
      addonRight=""
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      className="oc-react-select-container"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={true}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={
        Object {
          "id": "id",
        }
      }
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {},
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        }
      }
      isLoading={false}
      joinValues={false}
      label=""
      labelKey="labelKey"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuContainerStyle={
        Object {
          "zIndex": 1080,
        }
      }
      menuRenderer={[Function]}
      multi={false}
      name="name"
      noResultsText="No results found"
      onBlur={[Function]}
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onOpen={[Function]}
      onSelectResetsInput={true}
      openOnClick={true}
      optionComponent={[Function]}
      options={Array []}
      pageSize={5}
      placeholder="Select..."
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={true}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      valueComponent={[Function]}
      valueKey="valueKey"
    />
  </OcInputContainer>
</div>
`;
