// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorModal succeeds at shallow mount without props 1`] = `""`;

exports[`ErrorModal succeeds at shallow mounting contents with empty error 1`] = `
<div
  role="dialog"
>
  <BackdropTransition
    appear={true}
    in={true}
  >
    <div
      className="modal-backdrop"
      onClick={[Function]}
    />
  </BackdropTransition>
  <RefHolder>
    <DialogTransition
      appear={true}
      in={true}
      onEntering={[Function]}
      onExited={[Function]}
      unmountOnExit={true}
    >
      <ModalDialog
        bsClass="modal"
        className="OcModal OcModal-modal-small ErrorModal"
        onClick={null}
        role="document"
        style={
          Object {
            "paddingLeft": undefined,
            "paddingRight": 0,
          }
        }
        tabIndex="-1"
      >
        <ModalHeader
          bsClass="modal-header"
          className="OcModal-reverse-header"
          closeButton={true}
          closeLabel="Close"
        >
          <div
            className="OcModal-header-container"
          >
            <h3
              className="modal-title"
            >
              <FormattedMessageWrapper
                defaultMessage="Error"
                description="Title for error modal"
                id="error-modal-title"
                wrapperType="wrapper"
              />
            </h3>
          </div>
        </ModalHeader>
        <ModalBody
          bsClass="modal-body"
          componentClass="div"
        >
          <ErrorModalContents
            error={Object {}}
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              }
            }
          />
        </ModalBody>
      </ModalDialog>
    </DialogTransition>
  </RefHolder>
</div>
`;
