// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PersonDetailsForm succeeds at shallow mount with minimal props 1`] = `
<PersonDetailsForm
  BasketActions={
    Object {
      "activateCheckoutStep": [Function],
      "commitBasket": [Function],
    }
  }
  BasketStore={
    Object {
      "basketItems": Array [
        Object {},
      ],
    }
  }
  ConsulStore={
    Object {
      "countries": Array [
        Object {
          "code": "AL",
          "name": "Albania",
        },
        Object {
          "code": "FI",
          "name": "Finland",
        },
        Object {
          "code": "GB",
          "name": "United Kingdom",
        },
        Object {
          "code": "US",
          "name": "United States of America",
        },
        Object {
          "code": "RU",
          "name": "Russia",
        },
        Object {
          "code": "SE",
          "name": "Sweden",
        },
        Object {
          "code": "IT",
          "name": "Italy",
        },
      ],
      "features": Object {
        "pos": Object {
          "identification": Object {
            "default": "passport",
            "driversLicence": Object {
              "identificationExpiryDate": false,
              "identificationIssuingAuthority": true,
            },
            "identificationTypes": Array [
              "passport",
              "drivingLicense",
            ],
            "passport": Object {
              "identificationExpiryDate": true,
              "identificationIssuingAuthority": true,
            },
          },
        },
      },
      "genders": Array [
        "female",
        "male",
      ],
      "locale": "en",
      "logSchemaDiscrepancies": false,
    }
  }
  UserActions={
    Object {
      "createUser": [Function],
      "updateUser": [Function],
    }
  }
  actions={
    Object {
      "resetConfirmCustomerDetails": [MockFunction],
    }
  }
  birthDayAgeLimit="0"
  defaultIdentificationType="passport"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
  isValid={[Function]}
  person={
    Object {
      "birthDay": Object {},
      "emails": Array [
        Object {
          "email": "kathrin.k@qvantel.com",
        },
      ],
      "firstName": "Kathri",
      "gender": "female",
      "identifications": Array [
        Object {
          "identificationId": "1234",
          "issuingAuthority": Object {
            "name": "police",
          },
          "type": "passport",
          "validityPeriod": Object {
            "endDate": "2023-06-10T00:00:00.000Z",
            "startDate": "2018-06-10T00:00:00.000Z",
          },
        },
      ],
      "language": "eng",
      "lastName": "K",
      "mobileNumbers": Array [
        Object {
          "number": "2398457",
        },
      ],
    }
  }
  postalAddress={
    Object {
      "city": "Test city",
      "country": "Mock country",
      "description": "Test Co.",
      "postalCode": "90210",
      "stateOrProvince": "Test stateOrProvince",
      "street": "1 Test Street",
    }
  }
  schema={
    ObjectSchema {
      "_blacklist": BadSet {
        "_map": Object {},
        "_refs": Object {},
      },
      "_conditions": Array [],
      "_defaultDefault": [Function],
      "_deps": Array [],
      "_excludedEdges": Array [
        "undefined-undefined",
      ],
      "_exclusive": Object {},
      "_label": "personDetailsForm",
      "_mutate": false,
      "_nodes": Array [
        "identificationExpiryDate",
        "identificationIssuingDate",
        "identificationIssuingAuthority",
        "identificationId",
        "identificationType",
        "country",
        "stateOrProvince",
        "city",
        "postalCode",
        "description",
        "street",
        "email",
        "mobileNumber",
        "gender",
        "birthDay",
        "lastName",
        "firstName",
      ],
      "_options": Object {
        "abortEarly": true,
        "recursive": true,
      },
      "_type": "object",
      "_typeError": [Function],
      "_whitelist": BadSet {
        "_map": Object {},
        "_refs": Object {},
      },
      "fields": Object {
        "birthDay": DateSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "max": true,
          },
          "_label": "birthDay",
          "_mutate": false,
          "_nullable": true,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "date",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
          ],
          "transforms": Array [
            [Function],
          ],
        },
        "city": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "city",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "country": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "country",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "description": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "description",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "email": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": false,
            "trim": false,
            "undefined": false,
          },
          "_label": "email",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
        },
        "firstName": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": false,
            "trim": false,
          },
          "_label": "firstName",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
        },
        "gender": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": false,
            "trim": false,
          },
          "_label": "gender",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
        },
        "identificationExpiryDate": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "identificationExpiryDate",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "identificationId": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "identificationId",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "identificationIssuingAuthority": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "identificationIssuingAuthority",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "identificationIssuingDate": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "identificationIssuingDate",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "identificationType": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "identificationType",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "lastName": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": false,
            "trim": false,
          },
          "_label": "lastName",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
        },
        "mobileNumber": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {
            "required": false,
            "trim": false,
          },
          "_label": "mobileNumber",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [
            [Function],
            [Function],
            [Function],
          ],
          "transforms": Array [
            [Function],
            [Function],
          ],
        },
        "postalCode": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "postalCode",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "stateOrProvince": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "stateOrProvince",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
        "street": StringSchema {
          "_blacklist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "_conditions": Array [],
          "_deps": Array [],
          "_exclusive": Object {},
          "_label": "street",
          "_mutate": false,
          "_options": Object {
            "abortEarly": true,
            "recursive": true,
          },
          "_type": "string",
          "_typeError": [Function],
          "_whitelist": BadSet {
            "_map": Object {},
            "_refs": Object {},
          },
          "tests": Array [],
          "transforms": Array [
            [Function],
          ],
        },
      },
      "tests": Array [],
      "transforms": Array [
        [Function],
      ],
    }
  }
/>
`;
